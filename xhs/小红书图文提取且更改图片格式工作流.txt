{"type":"coze-workflow-clipboard-data","source":{"workflowId":"7536105442267873334","flowMode":0,"spaceId":"7461798853910724634","isDouyin":false,"host":"www.coze.cn"},"json":{"nodes":[{"id":"136905","type":"4","meta":{"position":{"x":480,"y":0}},"data":{"nodeMeta":{"description":"获取小红书笔记信息","icon":"https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Plugin-v2.jpg","subtitle":"小红书笔记提取:get_notes","title":"获取笔记详情"},"inputs":{"apiParam":[{"input":{"type":"string","value":{"content":"7426237296480895015","rawMeta":{"type":1},"type":"literal"}},"name":"apiID"},{"input":{"type":"string","value":{"content":"get_notes","rawMeta":{"type":1},"type":"literal"}},"name":"apiName"},{"input":{"type":"string","value":{"content":"7426237296480878631","rawMeta":{"type":1},"type":"literal"}},"name":"pluginID"},{"input":{"type":"string","value":{"content":"小红书笔记提取","rawMeta":{"type":1},"type":"literal"}},"name":"pluginName"},{"input":{"type":"string","value":{"content":"","rawMeta":{"type":1},"type":"literal"}},"name":"pluginVersion"},{"input":{"type":"string","value":{"content":"","rawMeta":{"type":1},"type":"literal"}},"name":"tips"},{"input":{"type":"string","value":{"content":"","rawMeta":{"type":1},"type":"literal"}},"name":"outDocLink"}],"inputParameters":[{"name":"url","input":{"type":"string","value":{"type":"ref","content":{"source":"block-output","blockID":"100001","name":"url"},"rawMeta":{"type":1}}}}],"settingOnError":{"processType":1,"timeoutMs":180000,"retryTimes":0}},"outputs":[{"type":"list","name":"image_urls","schema":{"type":"string"},"required":false,"description":"小红书图组"},{"type":"string","name":"title","required":false,"description":"小红书笔记标题"},{"type":"string","name":"content","required":false,"description":"小红书笔记内容"}]},"_temp":{"bounds":{"x":300,"y":0,"width":360,"height":112},"externalData":{"icon":"https://lf6-appstore-sign.oceancloudapi.com/ocean-cloud-tos/plugin_icon/2298452610384355_1729048165400586263_XQVgRrYxtN.png?lk3s=cd508e2b&x-expires=1757343092&x-signature=RhrLVY1mCVuKP5731Bf4rAu609s%3D","apiName":"get_notes","pluginID":"7426237296480878631","pluginProductStatus":1,"pluginProductUnlistType":0,"pluginType":1,"spaceID":"7410832562161270824","inputs":[{"description":"小红书笔记完整链接","input":{},"name":"url","required":true,"type":"string"}],"outputs":[{"description":"小红书笔记内容","input":{},"name":"content","required":false,"type":"string"},{"description":"小红书图组","input":{},"name":"image_urls","required":false,"schema":{"assistType":0,"type":"string"},"type":"list"},{"description":"小红书笔记标题","input":{},"name":"title","required":false,"type":"string"}],"updateTime":1754746740,"channel_id":2,"latestVersionTs":"0","latestVersionName":"","versionName":"","description":"获取小红书笔记信息","title":"get_notes","mainColor":"#CA61FF"}}},{"id":"165772","type":"21","meta":{"position":{"x":1053.929914428036,"y":-29.76543614612632},"canvasPosition":{"x":905.6537677683366,"y":230.63311152266198}},"data":{"inputs":{"inputParameters":[{"name":"input","input":{"type":"list","schema":{"type":"string"},"value":{"type":"ref","content":{"source":"block-output","blockID":"136905","name":"image_urls"},"rawMeta":{"type":99}}}}],"loopCount":{"type":"integer","value":{"type":"literal","content":"10"}},"loopType":"array","variableParameters":[]},"nodeMeta":{"description":"用于通过设定循环次数和逻辑，重复执行一系列任务","icon":"https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Loop-v2.jpg","mainColor":"#00B2B2","subTitle":"循环","title":"循环"},"outputs":[{"name":"output","input":{"type":"list","schema":{"type":"string"},"value":{"type":"ref","content":{"source":"block-output","blockID":"117668","name":"jpgUrl"},"rawMeta":{"type":1}}}}]},"blocks":[{"id":"117668","type":"5","meta":{"position":{"x":0,"y":100}},"data":{"nodeMeta":{"description":"编写代码，处理输入变量来生成返回值","icon":"https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Code-v2.jpg","title":"更改图片url后缀","subTitle":"代码"},"inputs":{"inputParameters":[{"name":"url","input":{"type":"string","value":{"type":"ref","content":{"source":"block-output","blockID":"165772","name":"input"},"rawMeta":{"type":1}}}}],"code":"import re\nfrom urllib.parse import urlsplit, urlunsplit, quote\nfrom typing import Dict, Any, TypedDict\n\n\nclass Args(TypedDict):\n    params: Dict[str, Any]\n\n\nclass Output(TypedDict):\n    pngUrl: str\n    jpgUrl: str\n\n\ndef _derive_basename_from_path(path: str) -> str:\n    \"\"\"\n    从 URL 路径最后一段中提取基名：\n    - 优先取 '!' 之前的部分作为基名\n    - 若不存在 '!'，使用整段文件名\n    \"\"\"\n    last = path.rsplit('/', 1)[-1]\n    if '!' in last:\n        return last.split('!', 1)[0]\n    return last\n\n\ndef _normalize_fmt(fmt: str) -> str:\n    fmt = fmt.lower().strip()\n    if fmt == 'jpeg':\n        # 强制标准化为 'jpg'\n        return 'jpg'\n    if fmt not in ('jpg', 'png'):\n        raise ValueError(\"fmt 仅支持 'jpg' 或 'png'\")\n    return fmt\n\n\ndef _set_format_in_query(query: str, fmt: str) -> str:\n    \"\"\"\n    在原有查询串中，确保存在 imageMogr2，并将/追加到 format/{fmt}。\n    不使用 urlencode，避免把 'imageMogr2/...' 结构转义为 key=value。\n    \"\"\"\n    parts = [p for p in query.split('&') if p] if query else []\n\n    # 找 imageMogr2 段（它不是 key=value，而是单一段 'imageMogr2/...'）\n    idx = next((i for i, p in enumerate(parts) if p.startswith('imageMogr2')), None)\n    if idx is None:\n        parts.append(f'imageMogr2/format/{fmt}')\n    else:\n        seg = parts[idx]\n        if '/format/' in seg:\n            seg = re.sub(r'/format/[^/&?]*', f'/format/{fmt}', seg, count=1)\n        else:\n            seg = seg.rstrip('/') + f'/format/{fmt}'\n        parts[idx] = seg\n\n    return '&'.join(parts)\n\n\ndef _set_attname_in_query(query: str, filename: str) -> str:\n    \"\"\"\n    在查询串中设置/替换 attname=，并对文件名进行 URL 编码。\n    \"\"\"\n    parts = [p for p in query.split('&') if p] if query else []\n    encoded = 'attname=' + quote(filename, safe='')\n\n    replaced = False\n    for i, p in enumerate(parts):\n        if p.startswith('attname='):\n            parts[i] = encoded\n            replaced = True\n            break\n    if not replaced:\n        parts.append(encoded)\n    return '&'.join(parts)\n\n\ndef convert_url(url: str, fmt: str, filename: str | None = None) -> str:\n    \"\"\"\n    基于原始 URL，返回指定格式（png/jpg）且下载名与后缀一致的可访问 URL。\n    - 不修改路径中的样式段（如 '!nd_dft_wlteh_jpg_3'），避免 403。\n    - 在查询串中追加/替换 'imageMogr2/format/{fmt}'。\n    - 设置 'attname=<期望文件名.后缀>'，确保保存名与实际格式一致。\n    \"\"\"\n    fmt = _normalize_fmt(fmt)\n    sp = urlsplit(url)\n\n    # 生成合适的文件名\n    base = _derive_basename_from_path(sp.path)\n    expect_name = f\"{base}.{fmt}\" if not filename else filename\n\n    # 处理查询串：设置/替换 format，再设置/替换 attname\n    q1 = _set_format_in_query(sp.query, fmt)\n    q2 = _set_attname_in_query(q1, expect_name)\n\n    return urlunsplit((sp.scheme, sp.netloc, sp.path, q2, sp.fragment))\n\n\ndef to_png(url: str, filename: str | None = None) -> str:\n    return convert_url(url, 'png', filename)\n\n\ndef to_jpg(url: str, filename: str | None = None) -> str:\n    return convert_url(url, 'jpg', filename)\n\n\nasync def main(args: Args) -> Output:\n    \"\"\"\n    Coze 工作流主函数：处理小红书图片URL转换\n    \n    预期输入参数：\n    - url: 原始图片URL\n    - custom_filename: 可选的自定义文件名\n    \"\"\"\n    params = args['params']\n    \n    # 获取输入参数\n    original_url = params.get('url', '')\n    custom_filename = params.get('custom_filename', None)\n    \n    if not original_url:\n        raise ValueError(\"必须提供 url 参数\")\n    \n    # 构建输出对象\n    ret: Output = {\n        \"pngUrl\": to_png(original_url, custom_filename),  # PNG格式URL\n        \"jpgUrl\": to_jpg(original_url, custom_filename),  # JPG格式URL\n    }\n    \n    return ret","language":3,"settingOnError":{"switch":false,"processType":1,"timeoutMs":60000,"retryTimes":0}},"outputs":[{"type":"string","name":"pngUrl","required":false},{"type":"string","name":"jpgUrl","required":false}]},"_temp":{"bounds":{"x":725.6537677683366,"y":330.633111522662,"width":360,"height":112},"externalData":{"icon":"https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Code-v2.jpg","description":"编写代码，处理输入变量来生成返回值","title":"代码","mainColor":"#00B2B2"}}}],"edges":[{"sourceNodeID":"165772","targetNodeID":"117668","sourcePortID":"loop-function-inline-output"},{"sourceNodeID":"117668","targetNodeID":"165772","targetPortID":"loop-function-inline-input"}],"_temp":{"bounds":{"x":873.929914428036,"y":-29.76543614612632,"width":360,"height":138},"externalData":{"icon":"https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Loop-v2.jpg","description":"用于通过设定循环次数和逻辑，重复执行一系列任务","title":"循环","mainColor":"#00B2B2"}}}],"edges":[{"sourceNodeID":"136905","targetNodeID":"165772"}]},"bounds":{"x":300,"y":-29.76543614612632,"width":933.929914428036,"height":141.76543614612632}}